// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"crypto/tls"
	"github.com/Lajule/objects-service/pkg/groups"
	"github.com/Lajule/objects-service/pkg/groups/objects"
	"github.com/Lajule/objects-service/pkg/middlewares"
	"github.com/Lajule/objects-service/pkg/service"
	"github.com/Lajule/objects-service/pkg/store"
	"go.uber.org/zap"
	"net"
)

// Injectors from wire.go:

// InitializeService initializes a new service
func InitializeService(basePath string, memMapFs bool, tcpAddr *net.TCPAddr, tlsConfig *tls.Config, logger *zap.Logger) *service.Service {
	middlewaresLogger := middlewares.NewLogger(logger)
	group := objects.NewObjects(middlewaresLogger)
	v := groups.NewGroups(group)
	storeStore := store.NewStore(basePath, memMapFs, logger)
	serviceService := service.NewService(tcpAddr, tlsConfig, v, storeStore, logger)
	return serviceService
}
